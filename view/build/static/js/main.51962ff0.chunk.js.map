{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","roomInfo","Container","fluid","className","Row","Col","md","src","width","span","Button","variant","size","Form","Group","as","controlId","Label","Control","type","placeholder","CardDeck","map","e","i","Card","Img","Body","Title","Text","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2VAwFeA,MAhFf,WAAgB,IAAD,EACaC,mBAAS,CAAC,EAAG,EAAG,EAAG,IADhC,mBACRC,EADQ,KAGb,OAHa,KAIX,eAACC,EAAA,EAAD,CAAWC,OAAK,EAACC,UAAU,MAA3B,UACE,eAACC,EAAA,EAAD,CAAKD,UAAU,sBAAf,UACE,eAACE,EAAA,EAAD,CAAKF,UAAU,OAAOG,GAAI,EAA1B,UACE,qBAAKC,IAAI,cAAcC,MAAM,SAC7B,yCAEF,cAACH,EAAA,EAAD,CAAKC,GAAI,CAAEG,KAAM,KAAON,UAAU,GAAlC,SACE,cAACO,EAAA,EAAD,CAAQC,QAAQ,QAAQC,KAAK,KAA7B,kCAEF,cAACP,EAAA,EAAD,CAAKC,GAAI,CAAEG,KAAM,KAAjB,SACE,cAACC,EAAA,EAAD,CAAQC,QAAQ,QAAQC,KAAK,KAA7B,8CAEF,cAACP,EAAA,EAAD,CAAKC,GAAI,CAAEG,KAAM,KAAjB,SACE,cAACC,EAAA,EAAD,CAAQC,QAAQ,QAAQC,KAAK,KAA7B,4BAEF,eAACP,EAAA,EAAD,CAAKC,GAAI,EAAT,UACE,cAACI,EAAA,EAAD,CAAQC,QAAQ,GAAGR,UAAU,cAAcS,KAAK,KAAhD,sCACA,cAACF,EAAA,EAAD,CAAQC,QAAQ,QAAQR,UAAU,mBAAmBS,KAAK,KAA1D,4CAIJ,cAACR,EAAA,EAAD,CAAKD,UAAU,sDAAf,SACE,cAACE,EAAA,EAAD,CAAKC,GAAG,IAAR,SACE,cAACO,EAAA,EAAD,UACE,cAACA,EAAA,EAAKT,IAAN,UACE,eAACS,EAAA,EAAKC,MAAN,CAAYC,GAAIV,IAAKW,UAAU,eAA/B,UACE,cAACH,EAAA,EAAKI,MAAN,CAAYd,UAAU,iBAAtB,SAAuC,kHACvC,cAACU,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOhB,UAAU,QAAQiB,YAAY,8FAOlE,cAAChB,EAAA,EAAD,CAAKD,UAAU,2CAAf,SACE,cAACE,EAAA,EAAD,CAAKC,GAAG,IAAR,SACE,+BAAI,sBAAMH,UAAW,aAAjB,sCAA0C,6DAIlD,cAACC,EAAA,EAAD,CAAKD,UAAU,qCAAf,SACE,cAACE,EAAA,EAAD,CAAKC,GAAG,IAAR,SACE,cAACe,EAAA,EAAD,UACGrB,EAASsB,KAAI,SAACC,EAAGC,GAChB,OACE,cAACnB,EAAA,EAAD,CAAKC,GAAG,IAAIH,UAAU,GAAtB,SACE,eAACsB,EAAA,EAAD,WACE,cAACA,EAAA,EAAKC,IAAN,CAAUf,QAAQ,MAAMJ,IAAI,kBAC5B,eAACkB,EAAA,EAAKE,KAAN,WACE,cAACF,EAAA,EAAKG,MAAN,yBACA,cAACH,EAAA,EAAKI,KAAN,6GAIA,cAACnB,EAAA,EAAD,CAAQC,QAAQ,UAAhB,2CAUhB,cAACP,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,mCClEKyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.51962ff0.chunk.js","sourcesContent":["/*eslint-disable*/\nimport react, { useState } from 'react';\nimport { Container, Row, Card, CardDeck, Col, Button, Form } from 'react-bootstrap'; // npm install react-bootstrap bootstrap\nimport './css/App.css';\nimport './css/_reset.css';\nimport './css/content.css';\nimport './css/bootstrap.min.css'\n\nfunction App() {\n  let [roomInfo, roomUpd] = useState([1, 4, 5, 6])\n\n  return (\n    <Container fluid className=\"App\">\n      <Row className=\"nav p-2 text-center\">\n        <Col className=\"logo\" md={3}>\n          <img src=\"./logo2.png\" width=\"45px\" />\n          <h3>BANG</h3>\n        </Col>\n        <Col md={{ span: \"2\" }} className=\"\">\n          <Button variant=\"/home\" size=\"lg\">マップ</Button>\n        </Col>\n        <Col md={{ span: \"2\" }}>\n          <Button variant=\"/home\" size=\"lg\">お気に入り</Button>\n        </Col>\n        <Col md={{ span: \"2\" }}>\n          <Button variant=\"/home\" size=\"lg\">売る</Button>\n        </Col>\n        <Col md={3}>\n          <Button variant=\"\" className=\"btn_outline\" size=\"lg\">新規登録</Button>\n          <Button variant=\"/home\" className=\"btn_outline ml-3\" size=\"lg\">ログイン</Button>\n        </Col>\n      </Row>\n\n      <Row className=\"serach justify-content-md-center align-items-center\">\n        <Col md=\"8\" >\n          <Form>\n            <Form.Row>\n              <Form.Group as={Col} controlId=\"idSearchRoom\">\n                <Form.Label className=\"label_white xl\"><h2>どんな部屋をお探しですか？</h2></Form.Label>\n                <Form.Control type=\"text\" className=\"h-100\" placeholder=\"探す場所を入力して下さい。\" />\n              </Form.Group>\n            </Form.Row>\n          </Form>\n        </Col>\n      </Row>\n\n      <Row className=\"roomList_label justify-content-md-center\">\n        <Col md=\"8\">\n          <h2><span className={\"lable_bold\"}>おすすめ</span><span>の部屋</span></h2>\n        </Col>\n      </Row>\n\n      <Row className=\"roomList justify-content-md-center\">\n        <Col md=\"8\">\n          <CardDeck>\n            {roomInfo.map((e, i) => {\n              return (\n                <Col md=\"3\" className=\"\">\n                  <Card>\n                    <Card.Img variant=\"top\" src=\"./cardImg.svg\" />\n                    <Card.Body>\n                      <Card.Title>Card Title</Card.Title>\n                      <Card.Text>\n                        Some quick example text to build on the card title and make up the bulk of\n                        the card's content.\n                    </Card.Text>\n                      <Button variant=\"primary\">Go somewhere</Button>\n                    </Card.Body>\n                  </Card>\n                </Col>\n              )\n            })}\n          </CardDeck>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <footer>\n\n          </footer>\n        </Col>\n      </Row>\n\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}